package dan200.computercraft.client.render;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.client.renderer.GlStateManager;
import org.lwjgl.opengl.GL11;

/**
 * Eyebot - HG-Dev
 * Created using Tabula 7.0.1
 */
public class ModelEyebotTurtle extends ModelBase {
    public double[] modelScale = new double[] { 2.0D, 2.0D, 2.0D };
    public ModelRenderer CoreBlock;
    public ModelRenderer Belly;
    public ModelRenderer FacePlate;
    public ModelRenderer RightWhisker;
    public ModelRenderer LeftWhisker;
    public ModelRenderer RightBottomWhisker;
    public ModelRenderer LeftBottomWhisker;
    public ModelRenderer LeftCurvature;
    public ModelRenderer BackPlate;
    public ModelRenderer TopCurvature;
    public ModelRenderer RidgeFront;
    public ModelRenderer RightCurvature;
    public ModelRenderer LeftWhiskerPort1;
    public ModelRenderer LeftWhiskerPort2;
    public ModelRenderer RightWhiskerPort1;
    public ModelRenderer RightWhiskerPort2;
    public ModelRenderer BeamEmitter;
    public ModelRenderer Lens;
    public ModelRenderer FacePlateLower;
    public ModelRenderer LeftIntake;
    public ModelRenderer LeftRidgeArc;
    public ModelRenderer MiddleHump;
    public ModelRenderer RightRidgeArc;
    public ModelRenderer LeftRidgeAnt;
    public ModelRenderer MainAnt1;
    public ModelRenderer LeftRidgeAnt_1;
    public ModelRenderer RightRidgeAnt;
    public ModelRenderer RightIntake;
    public ModelRenderer LeftWhisker1;
    public ModelRenderer LeftWhisker2;
    public ModelRenderer RightWhisker1;
    public ModelRenderer LeftWhisker2_1;

    public ModelEyebotTurtle() {
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.CoreBlock = new ModelRenderer(this, -20, 0);
        this.CoreBlock.setRotationPoint(0.0F, 32.0F, 3.0F);
        this.CoreBlock.addBox(-11.0F, -10.0F, -10.0F, 22, 20, 20, 0.0F);
        this.LeftBottomWhisker = new ModelRenderer(this, 0, 54);
        this.LeftBottomWhisker.setRotationPoint(-4.1F, 3.5F, -2.5F);
        this.LeftBottomWhisker.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 9, 0.0F);
        this.setRotateAngle(LeftBottomWhisker, 0.18203784098300857F, -0.27314402793711257F, -1.6390387005478748F);
        this.BackPlate = new ModelRenderer(this, -14, 22);
        this.BackPlate.setRotationPoint(0.0F, -2.0F, 10.0F);
        this.BackPlate.addBox(-11.0F, -6.0F, 0.0F, 22, 12, 4, 0.0F);
        this.LeftIntake = new ModelRenderer(this, -7, 8);
        this.LeftIntake.mirror = true;
        this.LeftIntake.setRotationPoint(-3.7F, -2.0F, -2.0F);
        this.LeftIntake.addBox(-2.0F, -5.5F, 0.0F, 4, 11, 16, 0.0F);
        this.setRotateAngle(LeftIntake, 0.0F, 0.3490658503988659F, 0.0F);
        this.LeftCurvature = new ModelRenderer(this, 5, 10);
        this.LeftCurvature.setRotationPoint(-11.0F, 0.0F, 0.0F);
        this.LeftCurvature.addBox(-3.0F, -8.0F, -7.0F, 3, 16, 12, 0.0F);
        this.RightWhisker1 = new ModelRenderer(this, 0, 22);
        this.RightWhisker1.setRotationPoint(0.0F, 0.0F, 3.3F);
        this.RightWhisker1.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 14, 0.0F);
        this.setRotateAngle(RightWhisker1, 0.20943951023931953F, 0.0F, 0.0F);
        this.Belly = new ModelRenderer(this, -3, 39);
        this.Belly.mirror = true;
        this.Belly.setRotationPoint(0.0F, 13.0F, 3.5F);
        this.Belly.addBox(-4.0F, -8.0F, -12.0F, 8, 8, 17, 0.0F);
        this.setRotateAngle(Belly, 0.17453292519943295F, 0.0F, 0.0F);
        this.RightRidgeArc = new ModelRenderer(this, 16, 15);
        this.RightRidgeArc.mirror = true;
        this.RightRidgeArc.setRotationPoint(4.5F, 5.5F, 4.6F);
        this.RightRidgeArc.addBox(-2.0F, 0.0F, 0.0F, 3, 8, 7, 0.0F);
        this.setRotateAngle(RightRidgeArc, 2.2689280275926285F, 0.0F, 0.0F);
        this.LeftRidgeAnt = new ModelRenderer(this, 0, 22);
        this.LeftRidgeAnt.setRotationPoint(-0.5F, 8.2F, 5.5F);
        this.LeftRidgeAnt.addBox(-0.5F, -0.5F, -0.5F, 1, 12, 1, 0.0F);
        this.setRotateAngle(LeftRidgeAnt, -0.17453292519943295F, 0.0F, 0.10471975511965977F);
        this.RightWhiskerPort1 = new ModelRenderer(this, -21, -24);
        this.RightWhiskerPort1.setRotationPoint(7.5F, 8.8F, -8.8F);
        this.RightWhiskerPort1.addBox(-1.0F, -0.9F, 0.0F, 2, 2, 4, 0.0F);
        this.setRotateAngle(RightWhiskerPort1, -0.6373942428283291F, 0.22759093446006054F, 0.0F);
        this.LeftWhisker2_1 = new ModelRenderer(this, -6, 5);
        this.LeftWhisker2_1.setRotationPoint(0.0F, 0.0F, 3.6F);
        this.LeftWhisker2_1.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 17, 0.0F);
        this.setRotateAngle(LeftWhisker2_1, 0.31869712141416456F, -0.40980330836826856F, 0.0F);
        this.RidgeFront = new ModelRenderer(this, -31, 25);
        this.RidgeFront.setRotationPoint(0.0F, -10.8F, -11.7F);
        this.RidgeFront.addBox(-6.0F, 0.0F, 0.0F, 12, 3, 6, 0.0F);
        this.setRotateAngle(RidgeFront, -0.05235987755982988F, 0.0F, 0.0F);
        this.RightCurvature = new ModelRenderer(this, 5, 10);
        this.RightCurvature.mirror = true;
        this.RightCurvature.setRotationPoint(11.0F, 0.0F, 0.0F);
        this.RightCurvature.addBox(0.0F, -8.0F, -7.0F, 3, 16, 12, 0.0F);
        this.RightWhisker = new ModelRenderer(this, 13, 50);
        this.RightWhisker.setRotationPoint(4.8F, 2.5F, -2.5F);
        this.RightWhisker.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 9, 0.0F);
        this.setRotateAngle(RightWhisker, 0.091106186954104F, 0.3490658503988659F, 0.7853981633974483F);
        this.LeftWhiskerPort1 = new ModelRenderer(this, -21, -24);
        this.LeftWhiskerPort1.mirror = true;
        this.LeftWhiskerPort1.setRotationPoint(-7.5F, 8.8F, -8.8F);
        this.LeftWhiskerPort1.addBox(-1.0F, -0.9F, 0.0F, 2, 2, 4, 0.0F);
        this.setRotateAngle(LeftWhiskerPort1, -0.6373942428283291F, -0.22759093446006054F, 0.0F);
        this.LeftRidgeArc = new ModelRenderer(this, 16, 15);
        this.LeftRidgeArc.setRotationPoint(-3.5F, 5.5F, 4.6F);
        this.LeftRidgeArc.addBox(-2.0F, 0.0F, 0.0F, 3, 8, 7, 0.0F);
        this.setRotateAngle(LeftRidgeArc, 2.2689280275926285F, 0.0F, 0.0F);
        this.Lens = new ModelRenderer(this, 52, 15);
        this.Lens.setRotationPoint(0.0F, 0.0F, -8.0F);
        this.Lens.addBox(-2.0F, -2.0F, -2.0F, 4, 4, 4, 0.0F);
        this.setRotateAngle(Lens, 1.5707963267948966F, 0.0F, 0.7853981633974483F);
        this.LeftWhisker1 = new ModelRenderer(this, 0, 22);
        this.LeftWhisker1.mirror = true;
        this.LeftWhisker1.setRotationPoint(0.0F, 0.0F, 3.3F);
        this.LeftWhisker1.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 14, 0.0F);
        this.setRotateAngle(LeftWhisker1, 0.20943951023931953F, 0.0F, 0.0F);
        this.MainAnt1 = new ModelRenderer(this, 3, 3);
        this.MainAnt1.setRotationPoint(0.0F, -2.5F, 1.0F);
        this.MainAnt1.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 7, 0.0F);
        this.setRotateAngle(MainAnt1, 0.27314402793711257F, 0.0F, 0.0F);
        this.RightRidgeAnt = new ModelRenderer(this, 0, 22);
        this.RightRidgeAnt.setRotationPoint(-0.5F, 8.2F, 5.5F);
        this.RightRidgeAnt.addBox(-0.5F, -0.5F, -0.5F, 1, 12, 1, 0.0F);
        this.setRotateAngle(RightRidgeAnt, -0.17453292519943295F, 0.0F, -0.10471975511965977F);
        this.LeftRidgeAnt_1 = new ModelRenderer(this, 0, -41);
        this.LeftRidgeAnt_1.setRotationPoint(-0.5F, -0.5F, 6.0F);
        this.LeftRidgeAnt_1.addBox(0.0F, 0.0F, 0.0F, 1, 1, 14, 0.0F);
        this.LeftWhisker = new ModelRenderer(this, 24, 51);
        this.LeftWhisker.setRotationPoint(-4.8F, 2.5F, -2.5F);
        this.LeftWhisker.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 9, 0.0F);
        this.setRotateAngle(LeftWhisker, 0.091106186954104F, -0.3490658503988659F, -0.7740535232594852F);
        this.TopCurvature = new ModelRenderer(this, -12, 5);
        this.TopCurvature.setRotationPoint(0.0F, -10.0F, 0.0F);
        this.TopCurvature.addBox(-8.0F, -2.0F, -7.0F, 16, 2, 14, 0.0F);
        this.LeftWhisker2 = new ModelRenderer(this, -6, 5);
        this.LeftWhisker2.mirror = true;
        this.LeftWhisker2.setRotationPoint(0.0F, 0.0F, 3.6F);
        this.LeftWhisker2.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 17, 0.0F);
        this.setRotateAngle(LeftWhisker2, 0.31869712141416456F, 0.40980330836826856F, 0.0F);
        this.RightBottomWhisker = new ModelRenderer(this, 34, 51);
        this.RightBottomWhisker.setRotationPoint(4.1F, 3.5F, -2.5F);
        this.RightBottomWhisker.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 10, 0.0F);
        this.setRotateAngle(RightBottomWhisker, -0.22759093446006054F, 0.18203784098300857F, 0.045553093477052F);
        this.BeamEmitter = new ModelRenderer(this, 5, 44);
        this.BeamEmitter.setRotationPoint(0.0F, 0.0F, -12.0F);
        this.BeamEmitter.addBox(-1.5F, -1.5F, -6.0F, 3, 3, 10, 0.0F);
        this.setRotateAngle(BeamEmitter, -0.136659280431156F, 0.0F, 0.0F);
        this.MiddleHump = new ModelRenderer(this, 5, 0);
        this.MiddleHump.setRotationPoint(0.0F, 0.0F, 5.5F);
        this.MiddleHump.addBox(-1.5F, -3.0F, 0.0F, 3, 3, 4, 0.0F);
        this.RightIntake = new ModelRenderer(this, -7, 8);
        this.RightIntake.setRotationPoint(3.7F, -2.0F, -2.0F);
        this.RightIntake.addBox(-2.0F, -5.5F, 0.0F, 4, 11, 16, 0.0F);
        this.setRotateAngle(RightIntake, 0.0F, -0.3490658503988659F, 0.0F);
        this.FacePlate = new ModelRenderer(this, 36, 39);
        this.FacePlate.setRotationPoint(0.0F, 0.0F, -9.6F);
        this.FacePlate.addBox(-9.0F, -8.0F, -4.0F, 18, 16, 6, 0.0F);
        this.setRotateAngle(FacePlate, 0.03490658503988659F, 0.0F, 0.0F);
        this.FacePlateLower = new ModelRenderer(this, -4, 45);
        this.FacePlateLower.setRotationPoint(0.0F, 7.0F, -5.0F);
        this.FacePlateLower.addBox(-5.5F, 0.0F, 0.0F, 11, 4, 4, 0.0F);
        this.setRotateAngle(FacePlateLower, 0.41887902047863906F, 0.0F, 0.0F);
        this.RightWhiskerPort2 = new ModelRenderer(this, -21, -24);
        this.RightWhiskerPort2.setRotationPoint(10.0F, 8.0F, -7.8F);
        this.RightWhiskerPort2.addBox(-1.0F, -0.9F, 0.0F, 2, 2, 4, 0.0F);
        this.setRotateAngle(RightWhiskerPort2, -0.6829473363053812F, 0.6829473363053812F, 0.0F);
        this.LeftWhiskerPort2 = new ModelRenderer(this, -21, -24);
        this.LeftWhiskerPort2.mirror = true;
        this.LeftWhiskerPort2.setRotationPoint(-10.0F, 8.0F, -7.8F);
        this.LeftWhiskerPort2.addBox(-1.0F, -0.9F, 0.0F, 2, 2, 4, 0.0F);
        this.setRotateAngle(LeftWhiskerPort2, -0.6829473363053812F, -0.6829473363053812F, 0.0F);
        this.CoreBlock.addChild(this.LeftBottomWhisker);
        this.CoreBlock.addChild(this.BackPlate);
        this.LeftCurvature.addChild(this.LeftIntake);
        this.CoreBlock.addChild(this.LeftCurvature);
        this.RightWhiskerPort1.addChild(this.RightWhisker1);
        this.CoreBlock.addChild(this.Belly);
        this.RidgeFront.addChild(this.RightRidgeArc);
        this.LeftRidgeArc.addChild(this.LeftRidgeAnt);
        this.CoreBlock.addChild(this.RightWhiskerPort1);
        this.RightWhiskerPort2.addChild(this.LeftWhisker2_1);
        this.CoreBlock.addChild(this.RidgeFront);
        this.CoreBlock.addChild(this.RightCurvature);
        this.CoreBlock.addChild(this.RightWhisker);
        this.CoreBlock.addChild(this.LeftWhiskerPort1);
        this.RidgeFront.addChild(this.LeftRidgeArc);
        this.BeamEmitter.addChild(this.Lens);
        this.LeftWhiskerPort1.addChild(this.LeftWhisker1);
        this.MiddleHump.addChild(this.MainAnt1);
        this.RightRidgeArc.addChild(this.RightRidgeAnt);
        this.MainAnt1.addChild(this.LeftRidgeAnt_1);
        this.CoreBlock.addChild(this.LeftWhisker);
        this.CoreBlock.addChild(this.TopCurvature);
        this.LeftWhiskerPort2.addChild(this.LeftWhisker2);
        this.CoreBlock.addChild(this.RightBottomWhisker);
        this.Belly.addChild(this.BeamEmitter);
        this.RidgeFront.addChild(this.MiddleHump);
        this.RightCurvature.addChild(this.RightIntake);
        this.CoreBlock.addChild(this.FacePlate);
        this.FacePlate.addChild(this.FacePlateLower);
        this.CoreBlock.addChild(this.RightWhiskerPort2);
        this.CoreBlock.addChild(this.LeftWhiskerPort2);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        GlStateManager.pushMatrix();
        GlStateManager.scale(1D / modelScale[0], 1D / modelScale[1], 1D / modelScale[2]);
        this.CoreBlock.render(f5);
        GlStateManager.popMatrix();
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
    }
}
